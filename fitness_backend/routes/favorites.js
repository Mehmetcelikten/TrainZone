const express = require('express');
const router = express.Router();
const {
  createFavoriteList,
  getUserFavoriteLists,
  addExerciseToFavoriteList,
  renameFavoriteList,
  updateFavoriteListColor,
  getFavoriteListDetail, // ‚úÖ Detay sayfasƒ± i√ßin eklendi
} = require('../controllers/favoriteController');

// üîß Yeni favori listesi olu≈ütur
router.post('/:userId/favorites', async (req, res) => {
  try {
    await createFavoriteList(req, res);
  } catch (error) {
    res.status(500).json({ error: 'Favori listesi olu≈üturulurken bir hata olu≈ütu.' });
  }
});

// üì• Kullanƒ±cƒ±nƒ±n favori listelerini getir
router.get('/:userId/favorites', async (req, res) => {
  try {
    await getUserFavoriteLists(req, res);
  } catch (error) {
    res.status(500).json({ error: 'Favori listeleri alƒ±nƒ±rken bir hata olu≈ütu.' });
  }
});

// ‚ûï Egzersizi favori listeye ekle
router.patch('/:userId/lists/:listId/exercises', async (req, res) => {
  try {
    await addExerciseToFavoriteList(req, res);
  } catch (error) {
    res.status(500).json({ error: 'Egzersiz eklenirken bir hata olu≈ütu.' });
  }
});

// üîç Belirli bir favori listeyi ID ile detaylƒ± getir (populate ile)
router.get('/:userId/favorites/:listId', async (req, res) => {
  try {
    await getFavoriteListDetail(req, res);
  } catch (error) {
    res.status(500).json({ error: 'Favori listesi detaylarƒ± alƒ±nƒ±rken hata olu≈ütu.' });
  }
});

// üîÑ Favori listenin adƒ±nƒ± g√ºncelle
router.put('/:userId/favorites/:listId/rename', async (req, res) => {
  try {
    await renameFavoriteList(req, res);
  } catch (error) {
    res.status(500).json({ error: 'Favori listesi adƒ± g√ºncellenirken bir hata olu≈ütu.' });
  }
});

// üé® Favori listenin rengini g√ºncelle
router.put('/:userId/favorites/:listId/color', async (req, res) => {
  try {
    await updateFavoriteListColor(req, res);
  } catch (error) {
    res.status(500).json({ error: 'Favori listesi rengi g√ºncellenirken bir hata olu≈ütu.' });
  }
});

module.exports = router;
